import java.sql.Wrapper

buildscript {
    ext.kotlin_version= '1.8.22'
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
    repositories {
        mavenCentral()
    }
}

plugins {
    id "io.sentry.android.gradle" version "3.11.1"
}

apply plugin: 'com.android.application'
apply plugin: 'com.ydq.android.gradle.native-aar.import'
apply plugin: 'io.sentry.android.gradle'
apply plugin: 'kotlin-android'
//apply plugin: 'fullstory'

//fullstory {
//    org 'QNEN8'
//    enabledVariants 'all'
//    logLevel 'off'
//}

task wrapper(type: org.gradle.api.tasks.wrapper.Wrapper) {
    gradleVersion = '8.0.2'
}

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    defaultConfig {
        applicationId "com.example.vu.android"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 26
        versionName "23.6.5"

        externalNativeBuild {
            cmake {
                arguments.add(0, "-DANDROID_STL=c++_static")
            }
        }

        ndk {
            abiFilters("x86", "armeabi-v7a", "x86_64", "arm64-v8a")
        }
    }
    externalNativeBuild {
        cmake {
            setPath("CMakeLists.txt")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.debug // to be able to run release mode
            buildConfigField("String", "SE", "\"tda\"")
            buildConfigField("boolean", "SLOW_PROFILING", "true")
        }
        debug {
            buildConfigField("String", "SE", "\"tda\"")
            buildConfigField("boolean", "SLOW_PROFILING", "true")
            testCoverageEnabled true
        }
    }

    buildFeatures {
        dataBinding true
    }

    lint {
        abortOnError false
    }
    ndkVersion '21.3.6528147'
    namespace 'com.example.vu.android'

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation group: 'androidx.constraintlayout', name: 'constraintlayout', version: '1.1.3'
    implementation 'io.sentry:sentry-android:6.20.0'
    implementation 'io.sentry:sentry-android-okhttp:6.20.0'
    implementation 'io.sentry:sentry-android-fragment:6.20.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.6.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.6.0'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'junit:junit:4.13.1'
    def fragment_version = "1.6.0"
    // Java language implementation
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    // Warning: upgrading the room version beyond 2.0.0 may
    // cause errors running automated Saucelabs tests that generate data.
    // If you upgrade the room version, ensure you run associated automated
    // tests locally and that they pass.
    def room_version = "2.0.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

sentry {
    autoUpload = true
    uploadNativeSymbols = false
    includeNativeSources = false
    debug = true
    includeSourceContext = true
    additionalSourceDirsForSourceContext = ["src/main/java"]
}
