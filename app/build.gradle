import io.sentry.android.gradle.instrumentation.logcat.LogcatLevel

buildscript {
    ext.kotlin_version= '1.8.20'
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
    repositories {
        mavenCentral()
    }
}

plugins {
    id "io.sentry.android.gradle" version "4.4.0"
    id "jacoco"
}

apply plugin: 'com.android.application'
apply plugin: 'com.ydq.android.gradle.native-aar.import'
apply plugin: 'io.sentry.android.gradle'
apply plugin: 'kotlin-android'
//apply plugin: 'fullstory'

//fullstory {
//    org 'QNEN8'
//    enabledVariants 'all'
//    logLevel 'off'
//}

task wrapper(type: org.gradle.api.tasks.wrapper.Wrapper) {
    gradleVersion = '7.0'
}

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.example.vu.android"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 44
        versionName "2.10.5"

        externalNativeBuild {
            cmake {
                arguments.add(0, "-DANDROID_STL=c++_static")
            }
        }

        ndk {
            abiFilters("x86", "armeabi-v7a", "x86_64", "arm64-v8a")
        }
    }
    externalNativeBuild {
        cmake {
            setPath("CMakeLists.txt")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.debug // to be able to run release mode
            buildConfigField("String", "SE", "\"tda\"")
            buildConfigField("boolean", "SLOW_PROFILING", "true")
        }
        debug {
            buildConfigField("String", "SE", "\"tda\"")
            buildConfigField("boolean", "SLOW_PROFILING", "true")
            testCoverageEnabled true
        }
    }

    buildFeatures {
        dataBinding true
    }

    lintOptions {
        abortOnError false
    }
    ndkVersion '21.3.6528147'

}

jacoco {
    toolVersion = "0.8.5"
}

task jacocoTestReport(type: JacocoReport) {
    dependsOn 'testDebugUnitTest' // Use 'testDebugUnitTest' for unit tests in the debug build type

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*'
    ]

    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "${buildDir}/outputs/code_coverage/debugAndroidTest/connected", includes: ["*.ec"]))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation group: 'androidx.constraintlayout', name: 'constraintlayout', version: '1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    implementation 'com.android.support:support-core-utils:28.0.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'junit:junit:4.12'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'androidx.test:core:1.5.0'
    implementation 'androidx.test.ext:junit:1.1.5'
    implementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
    
    def fragment_version = "1.5.6"
    // Java language implementation
    implementation "androidx.fragment:fragment:$fragment_version"
    implementation 'androidx.test:rules:1.4.0'
    implementation 'org.mockito:mockito-core:3.11.2'
    implementation 'org.mockito:mockito-android:3.11.2'
    //implementation 'io.sentry:sentry-android:5.4.0'

    // Warning: upgrading the room version beyond 2.0.0 may
    // cause errors running automated Saucelabs tests that generate data.
    // If you upgrade the room version, ensure you run associated automated
    // tests locally and that they pass.
    def room_version = "2.0.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

sentry {
    autoUpload = true
    uploadNativeSymbols = false
    includeNativeSources = false
    debug = true
    includeSourceContext = true
    additionalSourceDirsForSourceContext = ["src/main/java"]
    tracingInstrumentation {
        enabled = true
        logcat {
            enabled = true
            minLevel = LogcatLevel.VERBOSE
        }
    }
}
