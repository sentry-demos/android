import io.sentry.android.gradle.instrumentation.logcat.LogcatLevel

buildscript {
    ext.kotlin_version = '1.8.20'
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.android.tools.build:gradle:7.0.0'
    }
}

plugins {
    id 'com.android.application'
    id "io.sentry.android.gradle" version "4.4.0"
    id "jacoco"
}

apply plugin: 'com.android.application'
apply plugin: 'com.ydq.android.gradle.native-aar.import'
apply plugin: 'io.sentry.android.gradle'
apply plugin: 'kotlin-android'

task wrapper(type: org.gradle.api.tasks.wrapper.Wrapper) {
    gradleVersion = '7.0'
}

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.example.vu.android"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 45
        versionName "2.10.6"

        externalNativeBuild {
            cmake {
                arguments.add(0, "-DANDROID_STL=c++_static")
            }
        }

        ndk {
            abiFilters("x86", "armeabi-v7a", "x86_64", "arm64-v8a")
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    externalNativeBuild {
        cmake {
            setPath("CMakeLists.txt")
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug // to be able to run release mode
            buildConfigField "String", "SE", "\"tda\""
            buildConfigField "boolean", "SLOW_PROFILING", "true"
        }
        debug {
            buildConfigField "String", "SE", "\"tda\""
            buildConfigField "boolean", "SLOW_PROFILING", "true"
            testCoverageEnabled true
        }
    }

    buildFeatures {
        dataBinding true
    }

    lintOptions {
        abortOnError false
    }
    ndkVersion '21.3.6528147'
}

jacoco {
    toolVersion = "0.8.5"
}

tasks.withType(Test) {
    finalizedBy jacocoTestReport
}

task jacocoTestReport(type: JacocoReport) {
    dependsOn 'testDebugUnitTest'

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*'
    ]

    def debugTree = fileTree(dir: "${buildDir}/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: "${buildDir}/jacoco/testDebugUnitTest.exec", includes: ["*.exec"]))
}

tasks.named("jacocoTestReport") {
    dependsOn "testDebugUnitTest"
    onlyIf = { true }
}

dependencies {
    // Room components
    def room_version = "2.0.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version" // For Java projects

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation group: 'androidx.constraintlayout', name: 'constraintlayout', version: '1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    implementation 'com.android.support:support-core-utils:28.0.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Test dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation 'org.mockito:mockito-inline:3.11.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.11.2'

    // Android Test dependencies
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}


sentry {
    autoUpload = true
    uploadNativeSymbols = false
    includeNativeSources = false
    debug = true
    includeSourceContext = true
    additionalSourceDirsForSourceContext = ["src/main/java"]
    tracingInstrumentation {
        enabled = true
        logcat {
            enabled = true
            minLevel = LogcatLevel.VERBOSE
        }
    }
}
